{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../component/firebase/firebase.utiles';\nimport { SignInSuccess, SignInFailure } from './user.action';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignIn() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn)]);\n}","map":{"version":3,"sources":["D:/pro work/my apps/nike-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignIn","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignIn","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,0CAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CACLO,aAAa,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADR,CAAT;AAGH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CACLQ,aAAa,CAACQ,KAAD,CADR,CAAT;AAGH;AACJ;AACD,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAArB;AACA,UAAMM,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BY,IAA5B,CAA1B;AACA,UAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CACLO,aAAa,CAAC;AAACO,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CADR,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CACLQ,aAAa,CAACQ,KAAD,CADR,CAAT;AAGH;AACJ;AACD,OAAO,UAAUI,cAAV,GAA2B;AAC9B,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCJ,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAsD;AACzD,MAAI;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMd,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMd,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BY,IAA5B,CAA1B;AACA,UAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CACLO,aAAa,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADR,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CACLQ,aAAa,CAACQ,KAAD,CADR,CAAT;AAGH;AACJ;AACD,OAAO,UAAUW,aAAV,GAA0B;AAC7B,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AACD,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACkB,cAAD,CAAL,EAAuBlB,IAAI,CAACyB,aAAD,CAA3B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth , googleProvider, createUserProfileDocument } from '../../component/firebase/firebase.utiles'\r\nimport { SignInSuccess, SignInFailure } from './user.action';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put (\r\n            SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()})\r\n        )\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put (\r\n            SignInSuccess({id:userSnapShot.id, ...userSnapShot.data()})\r\n        )\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* onGoogleSignIn() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put (\r\n            SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()})\r\n        )\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* onEmailSignIn() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignIn), call(onEmailSignIn)])\r\n}"]},"metadata":{},"sourceType":"module"}