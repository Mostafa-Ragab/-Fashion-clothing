{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../component/firebase/firebase.utiles';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess } from './user.action';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignIn() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn), call(isUserAuthenticated), call(signOutStart)]);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* OnCheackUserSeasion() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SEASION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* SignUPStart({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const creatUser = yield createUserProfileDocument(user);\n    yield put(signUpSuccess(creatUser));\n  } catch (error) {\n    put(signSIGN_UP_FAILURE(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, SignUPStart);\n}","map":{"version":3,"sources":["D:/pro work/my apps/nike-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignIn","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignIn","EMAIL_SIGN_IN_START","userSagas","isUserAuthenticated","signOutStart","OnCheackUserSeasion","CHECK_USER_SEASION","signOut","SIGN_OUT_START","SignUPStart","createUserWithEmailAndPassword","creatUser","signSIGN_UP_FAILURE","onSignUpStart","SIGN_UP_START"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth , googleProvider, createUserProfileDocument,getCurrentUser  } from '../../component/firebase/firebase.utiles'\r\nimport { SignInSuccess, SignInFailure,signOutSuccess,signOutFailure, signUpSuccess} from './user.action';\r\n\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put (\r\n            SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()})\r\n        )\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* onGoogleSignIn() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n}\r\nexport function* onEmailSignIn() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\nexport function* userSagas() {\r\n    yield all(\r\n        [\r\n            call(onGoogleSignIn),\r\n            call(onEmailSignIn), \r\n            call(isUserAuthenticated), \r\n            call(signOutStart)\r\n        ])\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return ;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put (\r\n            SignInFailure(error)\r\n        )\r\n    }\r\n};\r\nexport function* OnCheackUserSeasion() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SEASION, isUserAuthenticated)\r\n}\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* SignUPStart({payload:{email,password}}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email,password);\r\n        const creatUser = yield createUserProfileDocument(user);\r\n        yield put(signUpSuccess(creatUser))\r\n                \r\n    } catch (error) {\r\n        put(signSIGN_UP_FAILURE(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,SignUPStart)\r\n} \r\n\r\n"]},"metadata":{},"sourceType":"module"}