{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC1nvpZdOIA5tNzW_4lZjNvG97Z6nidJOs\",\n  authDomain: \"crwn-db-270f9.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-270f9.firebaseio.com\",\n  projectId: \"crwn-db-270f9\",\n  storageBucket: \"crwn-db-270f9.appspot.com\",\n  messagingSenderId: \"830172283755\",\n  appId: \"1:830172283755:web:ff0c137324babbe5ebc22e\",\n  measurementId: \"G-EQVPECJBXV\"\n};\nexport const creatUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(`error creating user`, error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/pro work/my apps/nike-clothing/src/component/firebase/firebase.utiles.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","creatUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,WAAW,EAAE,sCAHQ;AAIrBC,EAAAA,SAAS,EAAE,eAJU;AAKrBC,EAAAA,aAAa,EAAE,2BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAYA,OAAO,MAAMC,wBAAwB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC1E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAACC,MAAAA,WAAD;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AAEA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAOD,KARD,CAQE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAxBM;AAyBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AAEE,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC1nvpZdOIA5tNzW_4lZjNvG97Z6nidJOs\",\r\n  authDomain: \"crwn-db-270f9.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-270f9.firebaseio.com\",\r\n  projectId: \"crwn-db-270f9\",\r\n  storageBucket: \"crwn-db-270f9.appspot.com\",\r\n  messagingSenderId: \"830172283755\",\r\n  appId: \"1:830172283755:web:ff0c137324babbe5ebc22e\",\r\n  measurementId: \"G-EQVPECJBXV\"\r\n};\r\n  \r\n\r\nexport const creatUserProfileDocument = async (userAuth, additionalData) => {\r\n  if(!userAuth) return;\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const {displayName , email} = userAuth;\r\n\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n\r\n      });\r\n    } catch (error) {\r\n      console.log(`error creating user`, error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  \r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}