{"ast":null,"code":"var _jsxFileName = \"D:\\\\pro work\\\\my apps\\\\nike-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../component/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionFetching, selectCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../component/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching,\n  isCollectionsLoaded: selectCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/pro work/my apps/nike-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","fetchCollectionsStartAsync","createStructuredSelector","selectCollectionFetching","selectCollectionsLoaded","connect","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,mEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,wBAAT,EAAmCC,uBAAnC,QAAkE,gCAAlE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C;;AAEA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACV,MAAAA;AAAD,QAA8B,KAAKW,KAAzC;AAEAX,IAAAA,0BAA0B;AAC3B;;AAGDY,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,KAAF;AAAUC,MAAAA,oBAAV;AAAgCC,MAAAA;AAAhC,QAAwD,KAAKJ,KAAnE;AACG,wBACD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EADtB;AAEE,MAAA,MAAM,EAAGL,KAAD,iBACN,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAKL,KAAD,iBACR,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAI,CAACI;AADhB,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADC;AAyBJ;;AAnCoC;;AAsCvC,MAAMM,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ca,EAAAA,oBAAoB,EAAEZ,wBADyB;AAE/Ca,EAAAA,mBAAmB,EAAEZ;AAF0B,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,0BAA0B,EAAEmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADE,CAAL,CAAnC;;AAMA,eAAeI,OAAO,CACpBa,eADoB,EAEpBC,kBAFoB,CAAP,CAGZV,QAHY,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverview from '../../component/collection-overview/collection-overview.component';\r\nimport {Route} from 'react-router-dom'\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport { selectCollectionFetching, selectCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport { connect } from 'react-redux';\r\nimport WithSpinner from '../../component/with-spinner/with-spinner.component';\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const {fetchCollectionsStartAsync} =this.props;\r\n\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n\r\n  render () {\r\n    const { match , isCollectionFetching ,isCollectionsLoaded } = this.props;\r\n       return (\r\n      <div className='shop-page'>\r\n        <Route exact \r\n          path={`${match.path}`} \r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner \r\n              isLoading={isCollectionFetching} \r\n              {...props}\r\n\r\n            />\r\n          )} \r\n\r\n        />\r\n        <Route \r\n          path={`${match.path}/:collectionId`} \r\n          render = {(props) => (\r\n            <CollectionPageWithSpinner \r\n              isLoading = {!isCollectionsLoaded} \r\n              {...props}    \r\n              />\r\n          )}\r\n\r\n        /> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectCollectionFetching,\r\n  isCollectionsLoaded: selectCollectionsLoaded\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)\r\n  (ShopPage);"]},"metadata":{},"sourceType":"module"}